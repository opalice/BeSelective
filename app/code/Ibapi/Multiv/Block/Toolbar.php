<?php 
namespace Ibapi\Multiv\Block;


use Magento\Catalog\Helper\Product\ProductList;
use Magento\Catalog\Model\Product\ProductList\Toolbar as ToolbarModel;
use Ibapi\Multiv\Helper\Data;


class Toolbar extends  \Magento\Catalog\Block\Product\ProductList\Toolbar{
    
    protected  $helper;
    
    private $_size=-1;
    private $_date=-1;
    /**
     * @param \Magento\Framework\View\Element\Template\Context $context
     * @param \Magento\Catalog\Model\Session $catalogSession
     * @param \Magento\Catalog\Model\Config $catalogConfig
     * @param ToolbarModel $toolbarModel
     * @param \Magento\Framework\Url\EncoderInterface $urlEncoder
     * @param ProductList $productListHelper
     * @param \Magento\Framework\Data\Helper\PostHelper $postDataHelper
     * @param array $data
     */
    private static  $sent=0;

    public function __construct(
        \Magento\Framework\View\Element\Template\Context $context,
        \Magento\Catalog\Model\Session $catalogSession,
        \Magento\Catalog\Model\Config $catalogConfig,
        ToolbarModel $toolbarModel,
        \Magento\Framework\Url\EncoderInterface $urlEncoder,
        ProductList $productListHelper,
        \Magento\Framework\Data\Helper\PostHelper $postDataHelper,
        Data $helper,
        array $data = []
        ){
        parent::__construct($context, $catalogSession, $catalogConfig, $toolbarModel, $urlEncoder, $productListHelper, $postDataHelper,$data);
        $this->helper=$helper;

    }




    public function getPagerHtml()
    {
        if(!self::$sent){
           self::$sent=1;
            return '';
        }

        return parent::getPagerHtml(); // TODO: Change the autogenerated stub
    }


    public function canShowSize(){

        if($this->_size!=-1){
            return $this->_size;
            
        }
        $cat=$this->helper->getCurrentCatId();
        $cats=explode(',',$this->helper->getValue("rentals/procat/ccats"));
        $cats=array_filter($cats,function($c,$v){
            if($c){
                return true;
            }
            return false;
        },ARRAY_FILTER_USE_BOTH);
            
        
        
         $this->_size= count($cats)&&in_array($cat, $cats)||$cats[0]=='*';
        return $this->_size;
        
    }
    public function  isTop(){
        return $this->helper->getRegistry('toolbarok');
    }
    public function createBottom(){

        self::$sent=1;
    }

    public function canShowDate(){
      if(self::$sent) return '';
        if($this->_date!=-1){
            return $this->_date;
        }
        $cat=$this->helper->getCurrentCatId();
        $cats=explode(',',$this->helper->getValue("rentals/procat/acats"));
        if(!$cats){
            return true;
        }
        
        $cats=array_filter($cats,function($c,$v){
            if($c){
                return true;
            }
            return false;
        },ARRAY_FILTER_USE_BOTH);
            
        
        $this->_date= count($cats)&&(in_array($cat, $cats)||$cats[0]=='*');
        return $this->_date;
        
    }
    /*
    public function setCollection($collection){
        parent::setCollection($collection);
        **@var  $collection \Magento\Framework\Data\Collection 
        *
        *
        *
      
        file_put_contents('coll.txt',get_class($collection),FILE_APPEND);
 //       if($this->getRequest()->getParam('brand'))
   ///     $collection->addFieldToFilter('brand', $this->getRequest()->getParam('brand'));
        
    }
    */
    
    
}
?>